verbatimIdentifier='@[_[:IsLetter:]][_[:IsLetterOrDigit:]]*'
namespaceKeyword<terminal>= "namespace"
usingKeyword= "using"
ifKeyword="if"
gotoKeyword="goto"
elseKeyword="else"
forKeyword<terminal>="for"
throwKeyword="throw"
whileKeyword="while"
returnKeyword="return"
tryKeyword="try"
catchKeyword="catch"
finallyKeyword="finally"
assemblyKeyword="assembly" // for assembly targets
voidType<terminal>="void" // basically for methods
partialKeyword="partial"
classKeyword="class"
enumKeyword="enum"
structKeyword="struct"
interfaceKeyword="interface"
getKeyword="get"
setKeyword="set"
eventKeyword="event"
publicKeyword="public"
privateKeyword="private"
protectedKeyword="protected"
internalKeyword="internal"
staticKeyword="static"
virtualKeyword="virtual"
abstractKeyword<terminal>="abstract"
constKeyword="const"
overrideKeyword="override"
whereKeyword="where"
semi=";"
varType="var"
colon=":"
outKeyword="out"
refKeyword="ref"
typeOf="typeof"
defaultOf="default"
newKeyword="new"
globalKeyword="global"
stringType="string"
boolType="bool"
charType="char"
floatType="float"
doubleType="double"
decimalType="decimal"
sbyteType="sbyte"
byteType="byte"
shortType="short"
ushortType="ushort"
intType="int"
uintType="uint"
longType="long"
ulongType="ulong"
objectType="object"
boolLiteral = 'true|false'
nullLiteral = "null"
thisRef = "this"
baseRef = "base"
verbatimStringLiteral='@"([^"]|"")*"'
stringLiteral='"(\\([\\"\'abfnrtv0]|[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})|[^"])*"'
characterLiteral='[\'](\\([\\"\'abfnrtv0]|[0-7]{3}|x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})|[^\'])[\']'
lte="<="
lt="<"
gte=">="
gt=">"
eqEq="=="
notEq="!="
eq="="
inc="++"
addAssign="+="
add="+"
dec="--"
subAssign="-="
sub="-"
mulAssign="*="
mul="*"
divAssign="/="
div="/"
modAssign="%="
mod="%"
and="&&"
bitwiseAndAssign="&="
bitwiseAnd="&"
or="||"
bitwiseOrAssign="|="
bitwiseOr="|"
not="!"
lbracket="["
rbracket="]"
lparen="("
rparen=")"
lbrace="{"
rbrace="}"
comma=","
colonColon="::"
dot="."
integerLiteral= '(0x[0-9A-Fa-f]{1,16}|([0-9]+))([Uu][Ll]?|[Ll][Uu]?)?'
floatLiteral= '(([0-9]+)(\.[0-9]+)?([Ee][\+\-]?[0-9]+)?[DdMmFf]?)|((\.[0-9]+)([Ee][\+\-]?[0-9]+)?[DdMmFf]?)'
identifier='[_[:IsLetter:]][_[:IsLetterOrDigit:]]*'
directive<terminal>='#[A-Za-z]+[\t ]*[^\n]*'
whitespace<hidden>='[ \t\r\n\v\f]+'
lineComment<terminal>='//[^\n]*'
blockComment<terminal,blockEnd="*/">="/*"
